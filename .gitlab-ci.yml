variables:
  JEKYLL_ENV: production
  LC_ALL: C.UTF-8
  BUNDLE_FROZEN: true

default:
  image: ruby:3.2-alpine
  before_script:
    - echo -e "\e[0Ksection_start:`date +%s`:install-deps\r\e[0KInstalando dependêncidas gerais"
    - apk add gcc g++ make
    - gem install bundler
    - echo -e "\e[0Ksection_end:`date +%s`:install-deps\r\e[0K"
    - gem --version
    - echo -e "\e[0Ksection_start:`date +%s`:install-bundle-deps\r\e[0KInstalando dependêncidas via bundle"
    - bundle install
    - echo -e "\e[0Ksection_end:`date +%s`:install-bundle-deps\r\e[0K"
  artifacts:
    when: always
    paths:
    - public
    - Gemfile.lock

.run-jekyll:
  script:
    - echo -e "\e[0Ksection_start:`date +%s`:jekyll-build\r\e[0KIniciando o Jekyll"
    - bundle exec jekyll build -d public
    - echo -e "\e[0Ksection_end:`date +%s`:jekyll-build\r\e[0K"

test:
  stage: test
  extends: .run-jekyll
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH != "master"

pages:
  extends: .run-jekyll
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "master"

pages-slim:
  stage: test
  image: ruby:3.2-slim
  before_script:
  - echo -e "\e[0Ksection_start:`date +%s`:install-deps\r\e[0KInstalando dependêncidas gerais"
  - apt update
  - apt install gcc g++ make -y
  - gem install bundler
  - echo -e "\e[0Ksection_end:`date +%s`:install-deps\r\e[0K"
  - gem --version
  - echo -e "\e[0Ksection_start:`date +%s`:install-bundle-deps\r\e[0KInstalando dependêncidas via bundle"
  - bundle install
  - echo -e "\e[0Ksection_end:`date +%s`:install-bundle-deps\r\e[0K"
  extends: .run-jekyll
  when: manual
